version: '3'

# Set ASPNETCORE_ENVIRONMENT= Development or Production, depending if you want to show up errors while testing. 
#
# You need to start it with the following CLI command:
# docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  diskordia.columbus.backgroundworker:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ServiceBus__ConnectionString=${SERVICE_BUS_CONNECTION_STRING}
      - ServiceBus__QueueName=COLUMBUS
      - HangFire__ConnectionString=${NOSQL_CONNECTION_STRING}
      - HangFire__Database=COLUMBUS_TEST
      - Staging__FareDeals__ConnectionString=${NOSQL_CONNECTION_STRING}
      - Staging__FareDeals__Database=COLUMBUS
      - FareDealScan__HeadlessMode=true
    ports:
      - "5001:80"
    privileged: true

  nosql.data:
    ports:
      - "27017:27017"

  rabbitmq:
    ports:
      - "15672:15672"
      - "5672:5672"
